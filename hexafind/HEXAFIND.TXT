The HexaFind program
====================

The program finds all the Tuckerman traverses (TT) possible for
hexaflexagons up to a given order, ploting their shapes in the screen,
and from them finds the strips and folding methods that generate any
possible hexaflexagon.

Introduction
============

An hexaflexagon is a device made of a paper strip divided into
equilateral triangles, that is folded in the shape of an hexagon.
It can be folded in a way that shows a number of different faces,
the order of the hexaflexagon, in a sequence mapped by the TT.
See the references below for more informations.

The TT is a map that shows the possible paths through the faces of an
hexaflexagon. Its shape is a set of N-2 triangles interconnected by their
corners, with only two triangles per interconnection and without closed
loops. The faces correspond to the corners of the triangles. The number of
different TTs with N-2 triangles is precisely the number of possible
hexaflexagons with N faces. Rotations and mirror images are considered
equivalent.

Operation
=========

The program classifies the TTs by assigning binary digits to the triangle
corners, going clockwise around the TT, with an unconnected corner
corresponding to "0", and a connected corner corresponding to "1".
This results in a binary number with 3(N-2) digits. These are circular
numbers, where rotations and mirror images are considered equivalent.
The unique number that identifies the TT, and the corresponding
hexaflexagon is considered the largest number among the possible rotations
and reflections. These numbers are listed in octal form when just one
TT is shown.

The generated codes can be listed in the screen (slow) or saved to a file.
Once a list of TTs is generated, the shapes can be plotted in the screen.
Use the "+" and "-" keys to scroll through the list of a given order.
The plots mark the starting corner with a red dot, and all the zeros with
a green dot (to allow the visualization of where is the opening of
apparently closed loops). Overlapping triangles are plotted in color.
(This visualization fails when there is a branch in a section with
overlap, but the corresponding binary number, or the face numbers,
solve the ambiguity.)

The program can plot the face numbers corresponding to the nodes
in the TT. When there are overlaps in the diagram, the list of face numbers
corresponding to each face is shown, in the order as they appear as the
TT is traversed around its exterior, clockwise.

The program can compute and display the strips that when folded result
in any TT. The 1/3 strips are to be replicated three times, with the
middle one inverted (back side up) if the order is odd. The program can
also plot the complete strips. Add a tab at the end of the strip to glue
it to the start when the folding is complete.
The strips are displayed with a red line identifying the start edge
and a green line identifying the end edge. Overlaps are identified with
different colors at the borders of the strip. If some ambiguity arises,
it can be solved by looking at the binary number that identifies the strip,
where "1" means a connection at the right and "0" a connection at the left.
This number has N digits, each corresponding to a triangle in the 1/3 strip.
The folding sequence (for the complete strip, of course) consists in folding
together all the adjacent triangles with identical numbers, and repeating
the process with the resulting folded strip until an hexagon is obtained.
The obtained hexaflexagon results with face 2 (red in the TT) up and face
1 down.
The face numbers in faces with overlaps are listed in the order as they
appear. The upper, white, numbers correspond to the upper face, and the
lower, yellow, numbers to the back face. The strips can also be seen as
lists, with the binary number that describes them and the corresponding
face numbers.
The strips can be shown as they are generated, or rotated/reflected so
the binary number describing the 1/3 strip is maximized. This allows
simpler observation of different hexaflexagons obtained from the same
strip.
The TT and strip drawings can be scrolled one by one with the "+" and
"-" keys, or page by page with the "PgUp" and "PgDn" keys.
The display can be switched between strips and maps with the key "Tab".
The strip normalization can be turned on or off with the F1 key.

Algorithms
==========

To find all the possible TTs, the program starts with the trihexaflexagon,
coded as "000", Order 3, adding new triangles at the free corners,
normalizing the binary description, and comparing with the previous known
TT.
To find all the TTs for order N+1:
For each known TT of order N:
  For each bit in the corresponding binary number, starting from the left:
    If the number is "0":
      Replace it by "1001" (adding a triangle);
      Find the largest number among rotations and reflections;
      If it is the first of the order, or is smaller than the last found:
        Add it to the list of TTs of order N+1;

The algorithm that finds the face numbers starting from the
binary representation of the TT is a reconstruction starting from the
trihexaflexagon:

sequence 1=TT binary number;
sequence 2="000"; (TT binary number of the trihexaflexagon)
faces=3,1,2; (faces of the trihexaflexagon)
For each digit in sequence 1, starting from the left:
  If the digit in sequence 1 is different from the digit in sequence 2:
    Replace the digit in sequence 2, that is always a "0", by "1001";
    Replace the face number that corresponds to that digit by four numbers:
      original number,
      new face number,
      previous face number (the last face number if the digit is the first),
      original number;

To find the strip from the TT, the program builds simultaneously the
strip and the TT, starting from the trihexaflexagon, based on a combination
between the numbering algorithm above and the "reflectocloning" method
developed by David King:

sequence 1=TT binary number;
sequence 2="000"; (TT binary number of the trihexa)
TT face numbers=3,1,2; (faces of the trihexa)
strip="101"; (1/3 of the strip for the trihexaflexagon)
upper faces=1,2,2;
lower faces=3,3,1;
For each digit in sequence 1, starting from the left:
  If the digit in sequence 1 is different from the digit in sequence 2:
    Save the present TT face as f1 and the previous TT face as f2;
    Replace the digit in sequence 2, that is always a "0", by "1001";
    Replace the TT face number that corresponds to that digit by four numbers:
      original number (f1),
      new face number,
      previous face number (f2, the last TT face if the digit is the first),
      original number.
    Find the pair f1/f2 or f2/f1 in the strip upper faces/lower faces;
    Reflectocloning algorithm:
      Shift the remaining strip and strip face numbers by one to the right,
      negating the strip codes and swapping upper faces with lower faces;
      If the strip digit is "1", reflectoclone by the front side:
        Replace the strip digit by "01";
        Replace the upper face/lower face pair a/b by new face/b, new face/a;
      Else, reflectoclone by the back side:
        Replace the strip digit by "10";
        Replace the upper face/lower face pair a/b by a/new face, b/new face;

The number of different hexaflexagons of order N is identical to the number
of ways to triangularize a polygon with N-2 sides. The number of different
possibilities is known to be:

3:1, 4:1, 5:1, 6:3, 7:4, 8:12, 9:27, 10:82, 11:228, 12:733, 13:2282,
14:7528, 15:24834, 16:83898, 17:285357, 18:983244, ...

The program could go up to order 21, but is limited presently at order 17.

Several hexaflexagons of a given order can be obtained from the same strip,
by different folding sequences. The number of unique strips for each order
is (Orders above 10 by David King):

3:1, 4:1, 5:1, 6:3, 7:3, 8:7, 9:8, 10:17,
11:21, 12:47, 13:63, 14:132, 15:205, 16:411, 17:685, 18:1353

References
==========

The program was written in C, and compiled with the GNU djgpp package
(http://www.delorie.com).
It uses the XView-PC graphical user interface
(http://www.coe.ufrj.br/~acmq/xview-pc.html)

Hexaflexagons:
Martin Gardner, "The Scientific American Book of Mathematical Puzzles and
Diversions", 1959, USA.
Marting Gardner, "Divertimentos Matematicos", IBRASA, 1967, Brazil
(translation to Portuguese, my original source).

In the Internet:
http://www.coe.ufrj.br/~acmq/hexaflexagons
http://homepages.enterprise.net/drking/flexagons/index.html (David King page)
http://129.16.30.11/~d3enar/Flexagon/index.html
http://www.students.bucknell.edu/tegan/Hexaflexagons.html

Last update: 4 April 1999
Antonio Carlos M. de Queiroz
acmq@coe.ufrj.br
http://www.coe.ufrj.br/~acmq
